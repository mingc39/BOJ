#include <stdio.h>

int main() {
	int n, a[100][10][1024] = {0,};
	// a[i][j][k] = 길이가 i+1이고 j로 시작하는 등장하는 숫자의 정보가 k인 계단 수의 개수
	// k가 0011001111 이면 7,6,3,2,1,0이 등장  
	
	// 입력  
	scanf("%d", &n);
	
	// 길이가 1일때 초기화  
	for(int i = 0; i < 10; i++) {
		a[0][i][1 << i] = 1;
	}
	
	// 기존의 계단수 앞에 숫자를 붙여서 더 긴 계단수 만들기  
	for(int i = 1; i < n; i++) {
		// 0은 1로 시작하는 계단수 앞에만 붙일 수 있음  
		{
			for(int k = 0; k < 1024; k++) {
				a[i][0][k | 1 << 0] = (a[i][0][k | 1 << 0] + a[i - 1][1][k]) % 1000000000;
			}
		}
		
		// j(1<=j<=8)는 j+1, j-1로 시작하는 계단수 앞에 붙일 수 있음
		for(int j = 1; j <= 8; j++) {
			for(int k = 0; k < 1024; k++) {
				a[i][j][k | 1 << j] = (a[i][j][k | 1 << j] + a[i - 1][j + 1][k]) % 1000000000;
				a[i][j][k | 1 << j] = (a[i][j][k | 1 << j] + a[i - 1][j - 1][k]) % 1000000000;
			}
		}
		
		// 9는 8로 시작하는 계단수 앞에만 붙일 수 있음
		{
			for(int k = 0; k < 1024; k++) {
				a[i][9][k | 1 << 9] = (a[i][9][k | 1 << 9] + a[i - 1][8][k]) % 1000000000;
			}
		}
	}
	
	// 합 구하기  
	long long sum = 0;
	for(int i = 1; i < 10; i++) {
		sum += a[n - 1][i][1023];
	}
	
	// 출력  
	printf("%d", sum % 1000000000);
	
	return 0;
}
